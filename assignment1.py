# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FSIyG6P4jAp8vPP-0xxVPU6xSaSQBawx
"""

import numpy as np
from scipy.stats import binom
from math import comb
simlen=int(1e6)
#binomial parameters 
kk=0
pp=0.05
nn=5
#calculation of theoritical probability of a binomial distribution
def prob(n,k,p):
	prob=comb(n,k)*(p**k)*((1-p)**(n-k))
	return(prob)

#Simulations using Bernoulli r.v.
data_bin = binom.rvs(n=nn,p=pp,size=simlen)

#Calculating the number of favourable outcomes from the simulation
def fav(data_bin,k):
	err_ind = np.nonzero(data_bin ==k)
	err_n = np.size(err_ind)/simlen
	return(err_n)

#atmost 1
err_n_2=0
prob2=0
for i in range(0,2):
  prob2=prob2+prob(nn,i,pp)
  err_n_2=err_n_2+fav(data_bin,i)

#more than 1
err_n_3=0
prob3=0
for i in range(2,6):
	prob3=prob3+prob(nn,i,pp)
	err_n_3=err_n_3+fav(data_bin,i)

#atleast 1
err_n_4=0
prob4=0
for i in range(1,6):
	prob4=prob4+prob(nn,i,pp)
	err_n_4=err_n_4+fav(data_bin,i)

#Theory vs simulation
print("none will fuse after 150 days")
print(fav(data_bin,kk),prob(nn,kk,pp))
print("\nnot more than 1 bulb")
print(err_n_2,prob2)
print("\nmore than 1 bulb ")
print(err_n_3,prob3)
print("\natleat 1 bulb fuses after 150 days")
print(err_n_4,prob4)

print("\nAbove are values of probability of different cases, by theory and simultion")